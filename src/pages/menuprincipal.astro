---
import { productsData } from '../data/products.js';
import '../styles/NavBar.css'
type Product = {
  image: string;
  description: string;
  price: string;
  description1: string;
  description2: string;
  price2: string;
  allergens: string[];
};

type ProductsData = {
  entrantes: Product[];
  carne: Product[];
};

import NavCarta from '../components/NavCarta.astro';
import '../styles/menuprin.css';
import '../styles/carrusel.css';

const categories = Object.keys(productsData);
let selectedCategory: keyof ProductsData = categories[0] as keyof ProductsData;

---
<html lang="es">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Menú Principal</title>
  </head>
  <body>
    <NavCarta />

    <div class="menu-container">
      <h2 class="menu-title">Menú</h2>
      <p class="menu-description">Prueba nuestras exquisitas tapas y degusta nuestros platos del día.</p>
      
      <div class="carousel-container">
        <button class="carousel-button left" aria-label="Previous">&#9664;</button>
        <div class="carousel">
          {productsData[selectedCategory].map((product: Product) => (
            <div class="carousel-item">
              <img src={product.image} alt={product.description} class="carousel-image" />
              <h3 class="carousel-title">{product.description}</h3>
            </div>
          ))}
        </div>
        <button class="carousel-button right" aria-label="Next">&#9654;</button>
      </div> 
    </div>

    <script type="module">
      document.addEventListener('DOMContentLoaded', () => {
        const carousel = document.querySelector('.carousel');
        const leftButton = document.querySelector('.carousel-button.left');
        const rightButton = document.querySelector('.carousel-button.right');

        // Listen for the custom category selection event from NavCarta
        document.addEventListener('categorySelect', (event) => {
          const selectedCategory = event.detail;
          console.log("Selected category: " + selectedCategory); // Log category being passed
          
          // Normalize category to ensure matching with the productsData keys
          const normalizedCategory = selectedCategory.trim().toLowerCase(); // Normalize (lowercase, no extra spaces)
          console.log("Normalized category: " + normalizedCategory); // Log normalized category
          
          updateCarousel(normalizedCategory); // Update carousel with the normalized category
        });

        // Scroll functionality for carousel buttons
        leftButton.addEventListener('click', () => {
          carousel.scrollBy({ left: -300, behavior: 'smooth' });
        });

        rightButton.addEventListener('click', () => {
          carousel.scrollBy({ left: 300, behavior: 'smooth' });
        });

        // Function to update carousel based on the selected category
        function updateCarousel(category) {
          // Debugging log to check if category exists in productsData
          console.log("Category in updateCarousel function: " + category);
          console.log("Available categories in productsData:", Object.keys(productsData)); // Log available categories

          // Dynamically get the products from the selected category
          const selectedProducts = productsData[category];
          
          if (!selectedProducts) {
            console.error('No products found for category:', category);
            return;
          }

          // Create the carousel items dynamically
          const carouselItems = selectedProducts.map(product => `
            <div class="carousel-item">
              <img src="${product.image}" alt="${product.description}" class="carousel-image" />
              <h3 class="carousel-title">${product.description}</h3>
            </div>
          `).join('');

          // Update the carousel's inner HTML with the new items
          carousel.innerHTML = carouselItems;
        }

        // Initial load of the carousel with the default selected category
        updateCarousel(selectedCategory);
      });
    </script>
  </body>
</html>